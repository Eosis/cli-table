var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","Center","justify","option","color","cellformat","builder","horizontalline","verticalline","Set column separators of a `Table`","separator","cli_table","try_from","try_into","borrow_mut","type_id","cli_table::format","to_owned","clone_into","borrow","typeid","parsecolorerror","cellformatbuilder","default","tableformat","formatter","CellFormat","CellFormatBuilder","VerticalLine","HorizontalLine","BorderBuilder","Separator","SeparatorBuilder","TableFormat"];

searchIndex["cli_table"]={"doc":"Rust crate for printing tables on command line.","i":[[3,"Cell",R[11],"A `Cell` in a `Table`",N,N],[3,"Row",E,"A `Row` in a `Table`",N,N],[3,"Table",E,"Struct for building a `Table` on command line",N,N],[11,"new",E,"Creates a new `Cell`",0,[[[R[5]],[T]],["self"]]],[11,"new",E,"Creates a new `Row`",1,[[["vec",["cell"]],["cell"]],["self"]]],[11,"new",E,"Creates a new `Table`",2,[[["row"],["vec",["row"]],[R[24]]],["table"]]],[11,"print_stdout",E,"Prints current `Table` to `stdout`",2,[[["self"]],[R[0]]]],[11,"print_stderr",E,"Prints current `Table` to `stderr`",2,[[["self"]],[R[0]]]],[0,"format",E,"Utilities for formatting of a `Table`",N,N],[4,"Color",R[16],"The set of available colors for the terminal…",N,N],[13,"Black",E,E,3,N],[13,"Blue",E,E,3,N],[13,"Green",E,E,3,N],[13,"Red",E,E,3,N],[13,"Cyan",E,E,3,N],[13,"Magenta",E,E,3,N],[13,"Yellow",E,E,3,N],[13,"White",E,E,3,N],[13,"Ansi256",E,E,3,N],[13,"Rgb",E,E,3,N],[3,R[26],E,"Struct for configuring a `Cell`'s format",N,N],[3,R[27],E,"Builder for `CellFormat`",N,N],[3,"Border",E,"Borders of a `Table`",N,N],[3,R[30],E,"Builder for `Border`",N,N],[3,R[29],E,"A horizontal line in a `Table` (border or row separator)",N,N],[3,R[31],E,"Inner (column/row) separators of a `Table`",N,N],[3,R[32],E,"Builder for `Separator`",N,N],[3,R[33],E,"Struct for configuring a `Table`'s format",N,N],[3,R[28],E,"A vertical line in a `Table` (border or column separator)",N,N],[4,"Align",E,"Used to vertically align contents of a `Cell`",N,N],[13,"Top",E,"Aligns contents to top",4,N],[13,"Bottom",E,"Aligns contents to bottom",4,N],[13,R[1],E,"Aligns contents to center",4,N],[4,"Justify",E,"Used to horizontally justify contents of a `Cell`",N,N],[13,"Left",E,"Justifies contents to left",5,N],[13,"Right",E,"Justifies contents to right",5,N],[13,R[1],E,"Justifies contents to center",5,N],[11,R[6],E,"Creates a new builder for `CellFormat`",6,[[],[R[22]]]],[11,R[2],E,"Justify contents of a `Cell`",7,[[[R[2]]],["self"]]],[11,"align",E,"Align contents of a `Cell`",7,[[["align"]],["self"]]],[11,"foreground_color",E,"Set foreground color of a `Cell`",7,[[[R[3],[R[4]]],[R[4]]],["self"]]],[11,"background_color",E,"Set background color of a `Cell`",7,[[[R[3],[R[4]]],[R[4]]],["self"]]],[11,"bold",E,"Set contents of `Cell` to be bold",7,[[["bool"]],["self"]]],[11,"underline",E,"Set contents of `Cell` to be underlined",7,[[["bool"]],["self"]]],[11,"build",E,"Build `CellFormat`",7,[[],[R[5]]]],[11,"new",E,"Creates a new instance of `VerticalLine`",8,[[["char"]],["self"]]],[11,"new",E,"Creates a new instance of `HorizontalLine`",9,[[["char"]],["self"]]],[11,R[6],E,"Creates a new builder for `Border`",10,[[],["borderbuilder"]]],[11,"top",E,"Set top border of a `Table`",11,[[[R[3],[R[7]]],[R[7]]],["self"]]],[11,"bottom",E,"Set bottom border of a `Table`",11,[[[R[3],[R[7]]],[R[7]]],["self"]]],[11,"left",E,"Set left border of a `Table`",11,[[[R[3],[R[8]]],[R[8]]],["self"]]],[11,"right",E,"Set right border of a `Table`",11,[[[R[3],[R[8]]],[R[8]]],["self"]]],[11,"build",E,"Build `Border`",11,[[],["border"]]],[11,R[6],E,"Creates a new builder for `Separator`",12,[[],["separatorbuilder"]]],[11,"column",E,R[9],13,[[[R[3],[R[8]]],[R[8]]],["self"]]],[11,"row",E,R[9],13,[[[R[3],[R[7]]],[R[7]]],["self"]]],[11,"title",E,"Set title title of a `Table`",13,[[[R[3],[R[7]]],[R[7]]],["self"]]],[11,"build",E,"Build `Separator`",13,[[],[R[10]]]],[11,"new",E,"Creates a new instance of `TableFormat`",14,[[["border"],[R[10]]],["self"]]],[17,"BORDER_COLUMN_ROW",E,"Format with borders, column separators and row separators…",N,N],[17,"BORDER_COLUMN_TITLE",E,"Format with borders, column separators and title separator…",N,N],[17,"BORDER_COLUMN_NO_ROW",E,"Format with borders and column separators (without row…",N,N],[17,"NO_BORDER_COLUMN_TITLE",E,"Format with no borders, column separators and title…",N,N],[17,"NO_BORDER_COLUMN_ROW",E,"Format with no borders, column separators and row separators",N,N],[17,"BORDER_NO_COLUMN_ROW",E,"Format with borders and row separators (without column…",N,N],[11,"from",R[11],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[0]]]],[11,R[13],E,E,0,[[],[R[0]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[20]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[0]]]],[11,R[13],E,E,1,[[],[R[0]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[20]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[0]]]],[11,R[13],E,E,2,[[],[R[0]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[20]]]],[11,"from",R[16],E,3,[[[T]],[T]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[0]]]],[11,R[13],E,E,3,[[],[R[0]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[20]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[0]]]],[11,R[13],E,E,6,[[],[R[0]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[20]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[0]]]],[11,R[13],E,E,7,[[],[R[0]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[20]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[0]]]],[11,R[13],E,E,10,[[],[R[0]]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[20]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[0]]]],[11,R[13],E,E,11,[[],[R[0]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[20]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[0]]]],[11,R[13],E,E,9,[[],[R[0]]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[20]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[0]]]],[11,R[13],E,E,12,[[],[R[0]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[20]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[[U]],[R[0]]]],[11,R[13],E,E,13,[[],[R[0]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[20]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[0]]]],[11,R[13],E,E,14,[[],[R[0]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[20]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[0]]]],[11,R[13],E,E,8,[[],[R[0]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[20]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[0]]]],[11,R[13],E,E,4,[[],[R[0]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[20]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[0]]]],[11,R[13],E,E,5,[[],[R[0]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[20]]]],[11,"clone",E,E,3,[[["self"]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[25]]],[[R[0],["error"]],["error"]]]],[11,"from_str",E,E,3,[[["str"]],[[R[4]],[R[21]],[R[0],[R[4],R[21]]]]]],[11,"eq",E,E,3,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[4]]],["bool"]]],[11,R[23],E,E,6,[[],["self"]]],[11,R[23],E,E,7,[[],[R[22]]]],[11,R[23],E,E,5,[[],["self"]]],[11,R[23],E,E,4,[[],["self"]]],[11,R[23],E,E,8,[[],["self"]]],[11,R[23],E,E,9,[[],["self"]]],[11,R[23],E,E,10,[[],["self"]]],[11,R[23],E,E,12,[[],["self"]]],[11,R[23],E,E,14,[[],[R[24]]]],[11,"clone",E,E,6,[[["self"]],[R[5]]]],[11,"clone",E,E,5,[[["self"]],[R[2]]]],[11,"clone",E,E,4,[[["self"]],["align"]]],[11,"fmt",R[11],E,0,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",R[16],E,6,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[25]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[25]]],[R[0]]]]],"p":[[3,"Cell"],[3,"Row"],[3,"Table"],[4,"Color"],[4,"Align"],[4,"Justify"],[3,R[26]],[3,R[27]],[3,R[28]],[3,R[29]],[3,"Border"],[3,R[30]],[3,R[31]],[3,R[32]],[3,R[33]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);